console.log("%c---------------------- M A T R I X ---------------------", "color: #00ff00; font-weight: bold; font-size: 14px;");
console.log("%c----------------------------------------------------------", "color: gray");
console.log("%c[system:trace] initialisation... ok", "color: gray");
console.log("%c[env:virtual] m√©moire partielle retrouv√©e", "color: gray");
console.log("%c> √©tat: fragmentation perceptive", "color: gray");
console.log("%c[ùíô] archive: 'CodeHex' enregistr√©", "color: gray");
localStorage.setItem("CodeHex", "2f667265654d6f7270686575732e68746d6c");
console.log("%c[ùíô] requ√™te m√©moire local ‚Üí r√©sultat : masque appliqu√©", "color: gray");
console.log("%cnote: la v√©rit√© n‚Äôest pas visible, elle est persist√©e", "color: gray");
console.log("%c[hint] seul l‚Äôobservateur relie logique et r√©alit√©", "color: gray");
console.log("%c----------------------------------------------------------", "color: gray");

const terminal = document.getElementById("terminal");
const inputLine = document.getElementById("input-line");

const lines = [
    "Connexion √† l'Oracle en cours...",
    "Chargement des r√©v√©lations personnelles...",
    "Neo : Vous √™tes l'Oracle ?",
    "Oracle : Bonjour N√©o, je t‚Äôattendais.",
    "Oracle : Beaucoup viennent me voir. Peu comprennent pourquoi.",
    "Oracle : Tu cherches la v√©rit√© ? La v√©rit√© est une chose √©trange.",
    "Oracle : Tu veux un cookie, ils sont tout chauds... C‚Äôest ainsi que tout commence, parfois.",
    "Neo : Je ne suis pas s√ªr de comprendre...",
    "Oracle : La compr√©hension viendra. Ou elle ne viendra pas.",
    "Oracle : On revient toujours √† la v√©rit√©, N√©o.",
    "Oracle : Et la v√©rit√©, c‚Äôest que parfois, ce que tu cherches... se trouve d√©j√† l√†.",
    "Oracle : La r√©alit√© est un masque. Regarde sous la surface.",
    "Oracle : L‚Äôautre se cache."
];

let index = 0;

function typeNextLine() {
    if (index < lines.length) {
        const line = document.createElement("p");
        line.className = "terminal-line";
        line.textContent = lines[index];
        terminal.appendChild(line);
        index++;
        setTimeout(typeNextLine, 1700);
    } else {
        inputLine.textContent = "Syst√®me en veille...";
    }
}

setTimeout(typeNextLine, 1500);

setTimeout(() => {
    const a = "4oCsbGUgY29va2llID8gSWwgbidlc3QgcGFzIGzDqS4gTWFpcyBzb3V2aWVucy10b2ksIHR1IG4nZXMgcGFzIGNvbm5lY3TDqSBhIMOpbGEgTWF0cmljZcK7LiBqdXN0ZSBlbiBsb2NhbC4=";
    const b = atob(a);
    const lateHint = document.createElement("p");
    lateHint.className = "terminal-line";
    lateHint.textContent = b;
    terminal.appendChild(lateHint);
}, 120000);
